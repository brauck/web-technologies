
@page "/products"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Kalevich.Blazor.Services
@using Kalevich.Domain.Entities
@using Kalevich.Blazor.Components.ProductComponents

@rendermode RenderMode.InteractiveServer




<h3>Products</h3>

@if (ApiProductService.Products == null || ApiProductService.Products.Count() == 0)
{
    <p>...loading</p>
}
else
{
    <CascadingValue Value="ApiProductService">
    <List ProductSelected="ShowDetails" />

     <Pager /> 
    </CascadingValue>
    <ProductDetails Product="SelectedProduct" />
}

@code {
    [Inject] IProductService<Product> ApiProductService { get; set; }

    // [Parameter]
    // public Product SelectedProduct { get; set; }

    private Product? SelectedProduct { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await ApiProductService.GetProducts();
    }

    void ShowDetails(int id)
    {
        SelectedProduct = ApiProductService.Products.First(d => d.Id == id);
    }
}
